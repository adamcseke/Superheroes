//
//  SearchInteractor.swift
//  Superheroes
//
//  Created by Adam Cseke on 2022. 03. 02..
//  Copyright (c) 2022. levivig. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation

final class SearchInteractor {
    let provider: SuperheroesService = RestClient.shared
    let dataProvider: SuperheroesDatabaseManager = DatabaseManager.main
}

// MARK: - Extensions -

extension SearchInteractor: SearchInteractorInterface {
    func getSearchedHeroes(name: String) -> [Heroes] {
        dataProvider.getSearchedHeroes(name: name)
    }
    
    func insertSearchedHeroes(entity: Heroes, completion: BoolCompletition?) {
        dataProvider.insertSearchedHeroes(entity: entity, completion: completion)
    }
    
    func delete(entity: Heroes, completion: BoolCompletition?) {
        dataProvider.delete(entity: entity, completion: completion)
    }
    
    func insert(entity: Heroes, completion: BoolCompletition?) {
        dataProvider.insert(entity: entity, completion: completion)
    }
    
    func isInTheFavorites(entity: Heroes) -> Bool {
        if DatabaseManager.main.getHeroes().first(where: { $0.id == entity.id }) != nil {
            return true
        } else {
            return false
        }
    }
    
    func getSuperheroes(name: String, completion: @escaping SuperheroesLoaded) {
        provider.getSuperheroes(name: name, completion: completion)
    }
    
}
